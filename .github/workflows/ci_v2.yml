name: Voyager CI/CD

on:
  push:
    branches: [testing]
  workflow_dispatch:

jobs:
  lint-and-test:
    name: "Lint & Test Backend"
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
      redis:
        image: redis:7
        ports: ['6379:6379']
    defaults:
      run:
        working-directory: ./backend

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Wait for Mongo and Redis
        run: |
          for i in {1..10}; do
            nc -z localhost 27017 && nc -z localhost 6379 && break
            echo "Waiting for services..." && sleep 3
          done

      - name: Run linter
        run: npm run lint || echo "No linter configured"

      - name: Run tests
        run: npm test

  build-and-push:
    name: "Build & Push Docker Images"
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/voyager-backend:latest

      - name: Build & Push ML Worker
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/worker.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/voyager-ml-worker:latest

      - name: Build & Push ML API
        uses: docker/build-push-action@v5
        with:
          context: ./ml
          file: ./ml/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/voyager-ml:latest

  deploy-to-staging:
    name: "Deploy to Staging (EC2)"
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Connecting to EC2 and deploying Voyager"
            cd ~/Voyager
            git reset --hard HEAD
            git pull origin main
            docker compose down -v --remove-orphans
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker compose pull
            docker compose up -d --force-recreate
